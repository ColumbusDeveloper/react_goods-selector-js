{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","ItemGood","good","goodsMod","selectedGood","setselectedGood","setGoodsCh","goodsCh","id","name","bool","className","cn","type","onClick","find","e","App","map","itemM","indexOf","goodsModSelectedOnload","itm","useState","item","ReactDOM","render","document","getElementById"],"mappings":"8OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAW,SAAC,GAOlB,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,SACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBAEAC,GACI,EAFJC,QAEI,EADJD,YAEQE,EAAmBN,EAAnBM,GAAIC,EAAeP,EAAfO,KAAMC,EAASR,EAATQ,KAiBlB,OACE,qBACE,UAAQ,OACRC,UAAWC,IAAG,CACZ,+BACAF,GAAyB,KAAjBN,GAAyBK,IAASL,EAAaK,OAJ3D,UAOE,6BACE,wBACE,oBAAaC,GAAyB,KAAjBN,GAAyBK,IAASL,EAAaK,KAAQ,eAAiB,aAC7FI,KAAK,SACLF,UAAWC,IAAG,SAAU,CACtB,UAAYF,GAAyB,KAAjBN,GAChBK,IAASL,EAAaK,OAE5BK,QAtBe,YACR,UADoC,EAARD,OAR1BV,EAASY,MAAK,SAAAC,GAAC,OAAIA,EAAER,KAAOA,KAEpCE,MAAO,EAEdJ,EAAWH,GACXE,EAAgBH,KAkBZ,mBAWOQ,GAAyB,KAAjBN,GAAyBK,IAASL,EAAaK,KAAQ,IAAM,SAI9E,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,QAMIQ,EAAM,WACjB,IAAMd,EAAWH,EAAMkB,KAAI,SAAAC,GAAK,MAAK,CACnCX,GAAIR,EAAMoB,QAAQD,GAAQV,KAAMU,EAAOT,MAAM,MAGzCW,EACJlB,EAASY,MAAK,SAAAO,GAAG,MAAiB,QAAbA,EAAIb,QAE3B,EAAwCc,mBAASF,GAAjD,mBAAOjB,EAAP,KAAqBC,EAArB,KAEA,EAA8BkB,mBAASpB,GAAvC,mBAAOI,EAAP,KAAgBD,EAAhB,KAEA,OACE,uBAAMK,UAAU,oBAAhB,UACE,oBAAIA,UAAS,8CAC4BP,EAAe,YAAc,IADtE,+BAOA,qBAAIO,UAAS,8CAC6BP,EAA6B,GAAd,aADzD,oBAIMA,EAAaK,KAJnB,gBAME,wBACE,UAAQ,cACRI,KAAK,SACLF,UAAU,cACVG,QACE,WACET,EAAgB,UAMxB,uBAAOM,UAAU,QAAjB,SACE,gCACGJ,EAAQW,KAAI,SAAAM,GAAI,OACf,cAAC,EAAD,CAEEtB,KAAMsB,EACNpB,aAAcA,EACdC,gBAAiBA,EACjBF,SAAUA,EACVI,QAASA,EACTD,WAAYA,GANPkB,EAAKhB,eClHxBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d777bb89.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const ItemGood = ({\n  good,\n  goodsMod,\n  selectedGood,\n  setselectedGood,\n  goodsCh,\n  setGoodsCh,\n}) => {\n  const { id, name, bool } = good;\n\n  function setNewValues() {\n    const chosen = goodsMod.find(e => e.id === id);\n\n    chosen.bool = true;\n\n    setGoodsCh(goodsMod);\n    setselectedGood(good);\n  }\n\n  const btnClickAction = function clickAct({ type }) {\n    if (type === 'click') {\n      setNewValues();\n    }\n  };\n\n  return (\n    <tr\n      data-cy=\"Good\"\n      className={cn({\n        'has-background-success-light':\n      ((bool && selectedGood !== '') || (name === selectedGood.name)),\n      })}\n    >\n      <td>\n        <button\n          data-cy={`${(bool && selectedGood !== '') || (name === selectedGood.name) ? 'RemoveButton' : 'AddButton'}`}\n          type=\"button\"\n          className={cn('button', {\n            'is-info': (bool && selectedGood !== '')\n            || (name === selectedGood.name),\n          })}\n          onClick={\n            btnClickAction\n          }\n        >\n          {`${(bool && selectedGood !== '') || (name === selectedGood.name) ? '-' : '+'}`}\n        </button>\n      </td>\n\n      <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n        {name}\n      </td>\n    </tr>\n  );\n};\n\nexport const App = () => {\n  const goodsMod = goods.map(itemM => ({\n    id: goods.indexOf(itemM), name: itemM, bool: false,\n  }));\n\n  const goodsModSelectedOnload\n  = goodsMod.find(itm => itm.name === 'Jam');\n\n  const [selectedGood, setselectedGood] = useState(goodsModSelectedOnload);\n\n  const [goodsCh, setGoodsCh] = useState(goodsMod);\n\n  return (\n    <main className=\"section container\">\n      <h1 className={\n        `title is-flex is-align-items-center ${selectedGood ? 'is-hidden' : ''}`\n        }\n      >\n        No goods selected\n      </h1>\n\n      <h1 className={\n        `title is-flex is-align-items-center ${!selectedGood ? 'is-hidden' : ''}`\n        }\n      >\n        {`${selectedGood.name} is selected`}\n\n        <button\n          data-cy=\"ClearButton\"\n          type=\"button\"\n          className=\"delete ml-3\"\n          onClick={\n            () => {\n              setselectedGood('');\n            }\n          }\n        />\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goodsCh.map(item => (\n            <ItemGood\n              key={item.id}\n              good={item}\n              selectedGood={selectedGood}\n              setselectedGood={setselectedGood}\n              goodsMod={goodsMod}\n              goodsCh={goodsCh}\n              setGoodsCh={setGoodsCh}\n            />\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}