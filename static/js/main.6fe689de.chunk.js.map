{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","ItemGood","good","goodsMod","selectedGood","setselectedGood","setGoodsCh","goodsCh","className","bool","name","type","cn","onClick","find","e","id","App","map","itemM","indexOf","goodsModSelectedOnload","itm","useState","item","ReactDOM","render","document","getElementById"],"mappings":"8OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAW,SAAC,GAInB,IAFFC,EAEC,EAFDA,KAAMC,EAEL,EAFKA,SAAUC,EAEf,EAFeA,aAAcC,EAE7B,EAF6BA,gBAA0BC,GAEvD,EAF8CC,QAE9C,EAFuDD,YAY1D,OACE,qBAAI,UAAQ,OAAOE,UAAS,WAAON,EAAKO,MAAyB,KAAjBL,GAAyBF,EAAKQ,OAASN,EAAaM,OAAU,gCAA9G,UACE,6BACE,wBACE,oBAAaR,EAAKO,MAAyB,KAAjBL,GAAyBF,EAAKQ,OAASN,EAAaM,KAAQ,eAAiB,aACvGC,KAAK,SACLH,UAAWI,IAAG,SAAU,CACtB,UAAYV,EAAKO,MAAyB,KAAjBL,GACrBF,EAAKQ,OAASN,EAAaM,OAEjCG,QACE,YACe,UADD,EAAXF,OAnBIR,EAASW,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOd,EAAKc,MAEzCP,MAAO,EAEdH,EAAWH,GACXE,EAAgBH,KAMZ,mBAeOA,EAAKO,MAAyB,KAAjBL,GAAyBF,EAAKQ,OAASN,EAAaM,KAAQ,IAAM,SAIxF,oBAAI,UAAQ,YAAYF,UAAU,eAAlC,SACGN,EAAKQ,WAMDO,EAAM,WACjB,IAAMd,EAAWH,EAAMkB,KAAI,SAAAC,GAAK,MAAK,CACnCH,GAAIhB,EAAMoB,QAAQD,GAAQT,KAAMS,EAAOV,MAAM,MAGzCY,EACJlB,EAASW,MAAK,SAAAQ,GAAG,MAAiB,QAAbA,EAAIZ,QAE3B,EAAwCa,mBAASF,GAAjD,mBAAOjB,EAAP,KAAqBC,EAArB,KAEA,EAA8BkB,mBAASpB,GAAvC,mBAAOI,EAAP,KAAgBD,EAAhB,KAEA,OACE,uBAAME,UAAU,oBAAhB,UACE,oBAAIA,UAAS,8CAC4BJ,EAAe,YAAc,IADtE,+BAOA,qBAAII,UAAS,8CAC6BJ,EAA6B,GAAd,aADzD,oBAIMA,EAAaM,KAJnB,gBAME,wBACE,UAAQ,cACRC,KAAK,SACLH,UAAU,cACVK,QACE,WACER,EAAgB,UAMxB,uBAAOG,UAAU,QAAjB,SACE,gCACGD,EAAQW,KAAI,SAAAM,GAAI,OACf,cAAC,EAAD,CAEEtB,KAAMsB,EACNpB,aAAcA,EACdC,gBAAiBA,EACjBF,SAAUA,EACVI,QAASA,EACTD,WAAYA,GANPkB,EAAKR,eCpGxBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6fe689de.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const ItemGood = (\n  {\n    good, goodsMod, selectedGood, setselectedGood, goodsCh, setGoodsCh,\n  },\n) => {\n  function setNewValues() {\n    const chosen = goodsMod.find(e => e.id === good.id);\n\n    chosen.bool = true;\n\n    setGoodsCh(goodsMod);\n    setselectedGood(good);\n  }\n\n  return (\n    <tr data-cy=\"Good\" className={`${((good.bool && selectedGood !== '') || (good.name === selectedGood.name)) && 'has-background-success-light'}`}>\n      <td>\n        <button\n          data-cy={`${(good.bool && selectedGood !== '') || (good.name === selectedGood.name) ? 'RemoveButton' : 'AddButton'}`}\n          type=\"button\"\n          className={cn('button', {\n            'is-info': (good.bool && selectedGood !== '')\n            || (good.name === selectedGood.name),\n          })}\n          onClick={\n            ({ type }) => {\n              if (type === 'click') {\n                setNewValues();\n              }\n            }\n          }\n        >\n          {`${(good.bool && selectedGood !== '') || (good.name === selectedGood.name) ? '-' : '+'}`}\n        </button>\n      </td>\n\n      <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n        {good.name}\n      </td>\n    </tr>\n  );\n};\n\nexport const App = () => {\n  const goodsMod = goods.map(itemM => ({\n    id: goods.indexOf(itemM), name: itemM, bool: false,\n  }));\n\n  const goodsModSelectedOnload\n  = goodsMod.find(itm => itm.name === 'Jam');\n\n  const [selectedGood, setselectedGood] = useState(goodsModSelectedOnload);\n\n  const [goodsCh, setGoodsCh] = useState(goodsMod);\n\n  return (\n    <main className=\"section container\">\n      <h1 className={\n        `title is-flex is-align-items-center ${selectedGood ? 'is-hidden' : ''}`\n        }\n      >\n        No goods selected\n      </h1>\n\n      <h1 className={\n        `title is-flex is-align-items-center ${!selectedGood ? 'is-hidden' : ''}`\n        }\n      >\n        {`${selectedGood.name} is selected`}\n\n        <button\n          data-cy=\"ClearButton\"\n          type=\"button\"\n          className=\"delete ml-3\"\n          onClick={\n            () => {\n              setselectedGood('');\n            }\n          }\n        />\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goodsCh.map(item => (\n            <ItemGood\n              key={item.id}\n              good={item}\n              selectedGood={selectedGood}\n              setselectedGood={setselectedGood}\n              goodsMod={goodsMod}\n              goodsCh={goodsCh}\n              setGoodsCh={setGoodsCh}\n            />\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n// import { App1 } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(\n//   <App1 />,\n//   document.getElementById('root'),\n// );\n"],"sourceRoot":""}